---

# Issues to watch for future improvement:
#   https://gitlab.com/gitlab-org/gitlab-ce/issues/28314

image:
  name: centos:7

stages:
  - build
  - test
  - sign
  - deploy

variables:
  PROJECT_NAME: echo $$CI_PROJECT_NAME | cut -c 10-
  # just pick the first one by default
  PRIMARY_RPM: find RPMS/ -name '*.rpm' -print -quit

before_script:
  - |
    set -euxo pipefail
    eval export PROJECT_NAME="$(eval $PROJECT_NAME)"
    yum -y -q install git

build:
  stage: build
  artifacts:
    name: RPMS
    expire_in: 30 days
    paths:
      - RPMS/
  script: |
    git clone --depth 1 https://github.com/riboseinc/rpm-specs /usr/local/rpm-specs
    ln -s "$CI_PROJECT_DIR" "/usr/local/rpm-specs/$PROJECT_NAME"
    cd "/usr/local/rpm-specs/$PROJECT_NAME"
    ./prepare.sh
    # just for informational purposes
    for file in ~/rpmbuild/RPMS/**/*.rpm; do echo "$file"; rpm -qlpv "$file"; echo; done
    # make sure our artifacts are uploaded
    mv ~/rpmbuild/RPMS "$CI_PROJECT_DIR"

.deploy:
  only:
    - master

sign:
  artifacts:
    name: RPMS
    expire_in: 30 days
    paths:
      - RPMS/
  extends: .deploy
  stage: sign
  script: |
    yum -y install rpmdevtools rpm-sign expect

    export private_key_path="$(mktemp --tmpdir XXXX.packager-private.gpg)"
    # Note that we're avoiding exposing the key in the job log here.
    # Another option would be to use python os.getenv+base64.b64decode,
    # since it's aleady installed at this point.
    #
    # Be cautious and do testing if changing this line (even if job logs are private)
    bash -ceuo pipefail 'echo $PACKAGE_SIGNING_KEY_BASE64 | base64 -d > $private_key_path'

    packager="$(gpg --list-packets $private_key_path | grep user.ID | sed -Ee 's/^.*packet: "(.*)"$/\1/')"
    gpg --import "$private_key_path"
    for pkg in RPMS/**/*.rpm; do
      expect <<EOF
        spawn rpm --addsign --define "%_gpg_name $packager" "$pkg"
        expect -ex        "Enter pass phrase: "
        send -- "\r"
        expect eof
    EOF
      # verification should fail since we haven't imported the public key
      ! rpmdev-checksig "$pkg"
      ! rpm --checksig "$pkg"
      # export + import to the rpm db
      public_key_path="$(mktemp --tmpdir XXXX.packager-public.gpg)"
      gpg --export --armor "$packager" > "$public_key_path"
      rpm --import "$public_key_path"
      # verification should succeed at this point
      # rpmdev-checksig will fail if no signature is present (so it's a good additional check)
      rpmdev-checksig "$pkg"
      rpm --checksig "$pkg"
    done

github-release:
  extends: .deploy
  stage: deploy
  script: |
    pkgver=$(rpm -qp --queryformat '%{VERSION}-%{RELEASE}' $(eval $PRIMARY_RPM))
    # we need a newish ruby for create-github-release.rb
    yum -y -q install centos-release-scl
    yum -y -q install rh-ruby25
    # workaround for scl_source bug/limitation
    set +eu
    source scl_source enable rh-ruby25
    set -eu
    # release it
    git clone --depth 1 https://github.com/riboseinc/create-github-release
    cd create-github-release
    gem install bundler -v 1.16.4
    bundle install
    bundle exec ./create-github-release.rb \
      "riboseinc/rpm-spec-$PROJECT_NAME" \
      "$pkgver" \
      --name "$PROJECT_NAME $pkgver" \
      --release-notes "Automatically built in commit $(echo $CI_COMMIT_SHA | cut -c 1-8)." \
      "$CI_PROJECT_DIR"/RPMS/**/*.rpm

